{"version":3,"sources":["components/SearchPanel/SearchPanel.js","components/Product/Product.js","redux/actions.js","components/Modal/Modal.js","components/ProductCommentForm/ProductCommentForm.js","components/ProductComment/ProductComment.js","components/ProductDetails/ProductDetails.js","components/ScrollToTop.js","pages/ProductsPage.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers.js","index.js"],"names":["SearchPanel","searchingParam","sortParam","useState","sortByName","setsortByName","sortByCount","setSortByCount","Box","direction","align","justify","CheckBox","pad","label","checked","onChange","event","prevVal","target","Product","props","name","count","imageUrl","id","dispatch","useDispatch","width","background","border","alignSelf","className","height","Image","src","fit","margin","top","to","Button","secondary","size","color","onClick","window","confirm","type","payload","SimpleModal","productName","setProductName","productImgUrl","setProductImgUrl","productCount","setProductCount","productWeight","setProductWeight","productWidth","setProductWidth","productHeight","setProductHeight","handleClose","onClose","saveButton","primary","startsWith","productValues","productId","toUpperCase","slice","weight","comments","alert","Date","now","toString","open","Layer","onClickOutside","Form","FormField","htmlFor","TextInput","placeholder","value","basis","min","max","ProductComment","comment","setComment","productComment","description","date","toLocaleString","Paragraph","TextArea","ADD_COMMENT","commentId","DELETE_COMMENT","ProductDetails","editModalOpen","setEditModalOpen","products","useSelector","state","useParams","productDetails","find","el","Heading","Text","bottom","length","reverse","map","i","ScrollToTop","useEffect","scrollTo","ProductsPage","setSortByName","setByCount","newProductModalOpen","setNewProductModalOpen","path","exact","Grid","rows","columns","gap","areas","start","end","gridArea","filterParam","wrap","sortedByCount","sort","a","b","product","key","sortedByName","displayProducts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","localStorageState","localStorage","getItem","persistedState","JSON","parse","store","createStore","action","newProductsList","filter","productIndex","findIndex","productComments","newCommentList","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","ReactDOM","render","Grommet","theme","global","font","family","rel","href","document","getElementById"],"mappings":"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","file":"static/js/main.237674c5.chunk.js","sourcesContent":["import { Box, CheckBox } from \"grommet\";\r\nimport React, { useState } from \"react\"\r\nimport './SearchPanel.css'\r\n\r\nconst SearchPanel = ({searchingParam, sortParam}) => {\r\n  const [sortByName, setsortByName] = useState(false);\r\n  const [sortByCount, setSortByCount] = useState(false);\r\n  \r\n  return (\r\n    <Box \r\n      direction='row'\r\n      align='center'\r\n      justify='center'\r\n    >\r\n      <CheckBox \r\n        pad='5px'\r\n        label=\"Sort by name?\"\r\n        checked={sortByName}\r\n        onChange={(event) => {\r\n          setsortByName((prevVal) => prevVal = !prevVal)\r\n          searchingParam(event.target.checked)\r\n        }}\r\n      />\r\n      <CheckBox\r\n        pad='5px'\r\n        label='Sort by count?'\r\n        checked={sortByCount}\r\n        onChange={(event) => {\r\n          setSortByCount((prevVal) => prevVal = !prevVal)\r\n          sortParam(event.target.checked)\r\n        }}\r\n      />    \r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SearchPanel\r\n","import React from \"react\"\r\nimport { useDispatch,} from \"react-redux\";\r\nimport { DELETE_PRODUCT } from \"../../redux/actions\";\r\nimport './product.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Button, Image } from \"grommet\";\r\n\r\nconst Product = (props) => {\r\n  const {name, count, imageUrl, id} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteProductButton = () => {\r\n    const approve = window.confirm(`Are you realy want to delete product ${name}?`);\r\n    if (approve) {\r\n      dispatch(DELETE_PRODUCT(id))\r\n    }\r\n  }\r\n     \r\n  return (\r\n    <Box \r\n      pad='xsmall'\r\n      width='medium'\r\n      direction='column'\r\n      background='white'\r\n      border='all'\r\n      justify='between'\r\n      alignSelf='center'\r\n    >\r\n      <Box>\r\n      <h2 className='product-title'>Name: {name}</h2>\r\n      <h3>Count: {count}</h3>\r\n      </Box>\r\n      <Box height='medium'  >\r\n      <Image \r\n        src={imageUrl}\r\n        fit='contain'\r\n        width='100%'\r\n      />\r\n      </Box>\r\n      <Box \r\n        align='center'\r\n        justify='between'\r\n        direction='row'\r\n        margin={{top: '10px'}}\r\n\r\n      >\r\n        <Link to={`${id}`}>\r\n          <Button \r\n            secondary\r\n            label='Details'\r\n            size='small'\r\n            color='neutral-3'\r\n          />\r\n        </Link>\r\n          <Button \r\n            secondary\r\n            label='Delete product'\r\n            size='small'\r\n            color='status-error'\r\n            onClick={handleDeleteProductButton}\r\n          >\r\n          </Button>\r\n      </Box>      \r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","export const ADD_PRODUCT = (product) => {\r\n  return {\r\n    type: 'ADD_PRODUCT',\r\n    payload: product\r\n  }\r\n}\r\n\r\nexport const DELETE_PRODUCT = (productId) => {\r\n  return {\r\n    type: 'DELETE_PRODUCT',\r\n    payload: productId\r\n  }\r\n}\r\n\r\nexport const EDIT_PRODUCT = (product) => {\r\n  return {\r\n    type: 'EDIT_PRODUCT',\r\n    payload: product\r\n  }\r\n}\r\n\r\nexport const ADD_COMMENT = (productId, comment) => {\r\n  return {\r\n    type: 'ADD_COMMENT',\r\n    payload: {productId, comment}\r\n  }\r\n}\r\n\r\nexport const DELETE_COMMENT = (productId, commentId) => {\r\n  return {\r\n    type: 'DELETE_COMMENT',\r\n    payload: {productId, commentId}\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, } from 'react-redux';\r\nimport './modal.css';\r\nimport { ADD_PRODUCT, EDIT_PRODUCT } from '../../redux/actions';\r\nimport { Box, Layer, TextInput, FormField, Form, Button } from 'grommet';\r\n\r\nexport default function SimpleModal(props) {\r\n  \r\n  const [productName, setProductName] = useState(props.productName || '');\r\n  const [productImgUrl, setProductImgUrl] = useState(props.productImgUrl || '');\r\n  const [productCount, setProductCount] = useState(props.productCount || 1);\r\n  const [productWeight, setProductWeight] = useState(props.productWeight || 1);\r\n  const [productWidth, setProductWidth] = useState(props.productWidth || 1);\r\n  const [productHeight, setProductHeight] = useState(props.productHeight || 1);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    if (props.onClose) {\r\n      props.onClose();\r\n    } \r\n  };\r\n\r\n  const clearModalFields = () => {\r\n    setProductName('');\r\n    setProductImgUrl('');\r\n    setProductCount(1);\r\n    setProductWeight(1);\r\n    setProductWidth(1);\r\n    setProductHeight(1);\r\n  }\r\n\r\n  const addProduct = () => {\r\n    const validInputs = productName && productImgUrl.startsWith('http') \r\n    && productWeight && productWidth && productHeight;\r\n    \r\n    if (validInputs) {\r\n      const productValues = {\r\n        id: Date.now().toString(),\r\n        imageUrl: productImgUrl,\r\n        name: productName[0].toUpperCase() + productName.slice(1),\r\n        count: +productCount,\r\n        size: {\r\n          width: productWidth,\r\n          height: productHeight\r\n        },\r\n        weight: productWeight,\r\n        comments:[]\r\n      }\r\n      dispatch( ADD_PRODUCT(productValues));\r\n      handleClose();\r\n      clearModalFields();\r\n    }else {\r\n      alert('Please, fill the form. (Product Img Url must starts with \"http\")')\r\n    }\r\n  }\r\n  \r\n  const editProduct = () => {\r\n    const validInputs = productName && productImgUrl.startsWith('http') \r\n    && productWeight && productWidth && productHeight;\r\n    \r\n    if (validInputs) {\r\n      const productValues = {\r\n        id: props.productId,\r\n        imageUrl: productImgUrl,\r\n        name: productName[0].toUpperCase() + productName.slice(1),\r\n        count: +productCount,\r\n        size: {\r\n          width: productWidth,\r\n          height: productHeight\r\n        },\r\n        weight: productWeight,\r\n        comments: props.comments\r\n      }\r\n      dispatch( EDIT_PRODUCT(productValues));\r\n      handleClose()\r\n    \r\n    }else {\r\n      alert('Please, fill the form. (Product Img Url must starts with \"http\")')\r\n    }\r\n  }\r\n\r\n  const saveButton = props.productName  \r\n    ? <Button margin='15px' size='medium' primary label='Edit' color='neutral-1' onClick={editProduct}/>\r\n    : <Button margin='15px' size='medium' primary label='Add' color='neutral-1' onClick={addProduct}/>;\r\n  \r\n  return (\r\n    props.open && <Layer onClickOutside={() => props.onClose()}>\r\n        <Box \r\n          align='center'\r\n          justify='center'\r\n        >\r\n          <Form>\r\n            <FormField name=\"name\" htmlFor=\"name\" label=\"Name:\" margin={{top: '10px'}}>\r\n              <TextInput \r\n                id='name'\r\n                size='small'\r\n                pad='100px'\r\n                placeholder='Enter name of product'\r\n                onChange={(event) => setProductName(event.target.value)}\r\n                value={productName}\r\n              />\r\n            </FormField>\r\n            <FormField name=\"img\" htmlFor=\"img\" label=\"Image url:\" margin={{top: '10px'}}>\r\n              <TextInput \r\n                id='img'\r\n                size='small'\r\n                placeholder='Enter img url of product'\r\n                onChange={(event) => setProductImgUrl(event.target.value)}\r\n                value={productImgUrl}\r\n              />\r\n            </FormField>      \r\n            <Box \r\n              direction='row'\r\n              pad='10px'\r\n              margin='15px'\r\n            >\r\n              <Box\r\n                basis='1/2'\r\n                align='start'\r\n                justify='end'\r\n                pad='20px'\r\n                margin='20px'\r\n              >\r\n                <span >Enter count of product</span>\r\n                <TextInput \r\n                  id='count'\r\n                  type='number'\r\n                  min=\"1\" max=\"100000\"\r\n                  onChange={(event) => setProductCount(event.target.value)}\r\n                  value={productCount}\r\n                />\r\n                <span >Enter weight (g)</span>\r\n                <TextInput \r\n                  id='weight' \r\n                  type='number'\r\n                  min=\"1\" max=\"10000\"\r\n                  onChange={(event) => setProductWeight(event.target.value)}\r\n                  value={productWeight}\r\n                />\r\n              </Box>\r\n              <Box\r\n                align='end'\r\n                justify='end'\r\n                basis='1/2'\r\n                pad='20px'\r\n                margin='20px'\r\n              >\r\n                <label htmlFor='width'>Enter width (cm)</label>\r\n                <TextInput \r\n                  id='width' \r\n                  type='number'\r\n                  min=\"1\" max=\"10000\"\r\n                  onChange={(event) => setProductWidth(event.target.value)}\r\n                  value={productWidth}\r\n                />\r\n                <label htmlFor='height'>Enter height (cm)</label>\r\n                <TextInput \r\n                  id='height' \r\n                  name='height' \r\n                  type='number'\r\n                  min=\"1\" max=\"10000\"\r\n                  onChange={(event) => setProductHeight(event.target.value)}\r\n                  value={productHeight}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Form>\r\n          <Box\r\n            align='center'\r\n            justify='center'\r\n          >\r\n            {saveButton}\r\n            <Button \r\n              size='medium'\r\n              margin='5px'\r\n              primary\r\n              label='Cancel'\r\n              color='status-error'\r\n              onClick={handleClose}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Layer>\r\n     \r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport './ProductCommentForm.css'\r\nimport { ADD_COMMENT } from \"../../redux/actions\";\r\nimport { Button, Paragraph, TextArea } from \"grommet\";\r\n\r\nconst ProductComment = (props) => {\r\n  const productId = props.productId;\r\n  const [comment, setComment] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const productComment = {\r\n    id: Date.now(),\r\n\t  productId,\r\n\t  description: comment,\r\n\t  date: new Date().toLocaleString()\r\n  }\r\n\r\n  const handleOnClick = () => {\r\n    if(!comment) {return}\r\n    dispatch(ADD_COMMENT(productId, productComment))\r\n    setComment('')\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <Paragraph>Comments:</Paragraph>\r\n      <TextArea \r\n        value={comment}\r\n        onChange={(event) => setComment(event.target.value)}\r\n        className='comment-text-area'\r\n        placeholder='Write your comment!'\r\n\r\n      />\r\n      <Button \r\n        margin='15px'\r\n        label='Add comment'\r\n        secondary\r\n        color='neutral-1'\r\n        onClick={handleOnClick}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductComment\r\n","import { Box, Button, Paragraph} from \"grommet\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DELETE_COMMENT } from \"../../redux/actions\";\r\n\r\nconst ProductComment = (props) => {\r\n  const productId = props.productId;\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n  <>\r\n    <Box\r\n      direction='row'\r\n      width='100%'\r\n      justify='between'\r\n      background={props.color}\r\n      pad='medium'\r\n    >\r\n      <Box>\r\n        <Paragraph color='neutral-3'>\r\n          {props.date}.\r\n        </Paragraph>\r\n        <Paragraph margin='0'>\r\n          {props.description}\r\n        </Paragraph>\r\n      </Box>\r\n      <Button \r\n        alignSelf='center'\r\n        onClick={() => {dispatch(DELETE_COMMENT(productId, props.id))}}\r\n        label='Delete'\r\n        secondary\r\n        color='status-error'\r\n        size='small'\r\n    />\r\n  </Box>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProductComment\r\n","import React, { useState } from \"react\";\r\nimport './productDetails.css'\r\nimport ProductCommentForm from \"../ProductCommentForm/ProductCommentForm\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProductComment from \"../ProductComment/ProductComment\";\r\nimport { Box, Button, Heading, Image, Text } from \"grommet\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProductDetails = (props) => {\r\n  const [editModalOpen, setEditModalOpen] = useState(false)\r\n  const products = useSelector(state => state.products)\r\n\r\n   // Get current product details \r\n  const { id }  = useParams();\r\n  const productDetails = products.find((el) => el.id === id);\r\n\r\n  if (!productDetails) {\r\n    return <div className=\"error\">Product not found</div>\r\n  }\r\n\r\n  const {name, count, imageUrl, size, weight, comments} = productDetails;\r\n  const  {width, height} = size;\r\n   \r\n  const handleOpen = () => {\r\n    setEditModalOpen(true);\r\n  };\r\n\r\n  return (\r\n      <Box\r\n        align='center'\r\n      >\r\n        <Box\r\n          alignSelf='center'\r\n          justify='center'\r\n          direction='row'\r\n        >\r\n          <Image \r\n            src={imageUrl}\r\n            alignSelf='center'\r\n            width='75%'\r\n          />\r\n        </Box>\r\n        <Heading \r\n          alignSelf='center'\r\n        >\r\n          Name: {name}\r\n        </Heading>\r\n        <Text alignSelf='center'>Count: {count}</Text>\r\n        <Box \r\n          alignSelf='center'\r\n          justify='center'\r\n          border='horizontal'\r\n          pad='medium'\r\n          margin='15px'\r\n        >\r\n          <Text margin={{bottom: '10px'}}>Details:</Text>\r\n          <Text>Width: {width} cm</Text>\r\n          <Text>Height: {height} cm</Text>\r\n          <Text>Weight: {weight} g</Text>\r\n        </Box>\r\n        <Box direction='row' alignSelf='center'>\r\n          <Button\r\n            onClick={handleOpen}\r\n            primary\r\n            label='Edit'\r\n            alignSelf='center'\r\n            margin='10px'\r\n          />\r\n          <Link to='/'>\r\n            <Button\r\n              secondary\r\n              label='Back'\r\n              alignSelf='center'\r\n              margin='10px'\r\n            />\r\n          </Link>\r\n        </Box>\r\n        <Modal \r\n          open={editModalOpen}\r\n          productId={id}\r\n          productName={name}\r\n          productImgUrl={imageUrl}\r\n          productCount={count}\r\n          productWeight={weight}\r\n          productWidth={width}\r\n          productHeight={height}\r\n          comments={comments}\r\n          onClose={() => setEditModalOpen(false)}\r\n       />\r\n        <ProductCommentForm \r\n          productId={id}/>\r\n        <Box \r\n          width='100%'\r\n          align='center'\r\n          justify='center'\r\n          >\r\n          {\r\n            comments && comments.length\r\n              ? comments.reverse().map((el, i) => <ProductComment key={el.id} color={i % 2 ? 'light-1' : 'light-3' }{...el} />)\r\n              : 'No comments'\r\n          }\r\n        </Box>\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default ProductDetails\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function ScrollToTop() {\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { useSelector } from 'react-redux';\r\nimport SearchPanel from \"../components/SearchPanel/SearchPanel\";\r\nimport Product from '../components/Product/Product';\r\nimport ModalWindow from \"../components/Modal/Modal\";\r\nimport ProductDetails from '../components/ProductDetails/ProductDetails'\r\nimport { Grid, Box, Button, Heading } from \"grommet\";\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\nimport ScrollToTop from \"../components/ScrollToTop\";\r\n\r\nconst ProductsPage = () => {\r\n  const [sortByName, setSortByName] = useState(false)\r\n  const [sortByCount, setByCount] = useState(false)\r\n  const products = useSelector(state => state.products)\r\n  const [newProductModalOpen, setNewProductModalOpen] = useState(false);\r\n\r\n  //function to display products\r\n  const displayProducts = () => {\r\n    if (sortByCount) {\r\n      const sortedByCount = [...products];\r\n      sortedByCount.sort((a,b) => b.count - a.count);\r\n\r\n      return sortedByCount.map((product) => <Product {...product} key={product.id}/>)\r\n    } \r\n     else if (sortByName) {\r\n      const sortedByName = [...products]\r\n      sortedByName.sort((a, b) => a.name > b.name ? 1 : -1)\r\n\r\n      return sortedByName.map((product) => <Product {...product} key={product.id}/>)\r\n    }\r\n\r\n      return products.map((product) => <Product {...product} key={product.id}/>);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setNewProductModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path={`/:id`}>\r\n          <ScrollToTop/>\r\n          <ProductDetails />\r\n        </Route>\r\n        <Route exact path='/'>\r\n          <Grid \r\n            className='product-page'\r\n            rows={['auto', 'flex']}\r\n            columns={['auto', 'flex']}\r\n            gap=\"small\"\r\n            areas={[\r\n              { name: 'header', start: [0,0], end: [1,0] },\r\n              { name: 'main', start: [0, 1], end: [1, 1] },\r\n            ]}\r\n          >\r\n            <Box \r\n              gridArea=\"header\" \r\n              background=\"brand\"\r\n              alignSelf='center'\r\n              align-items='center'\r\n            >\r\n              <Heading alignSelf='center'>Products Page</Heading>\r\n            </Box>\r\n            <Box\r\n              gridArea=\"main\"\r\n              background=\"light-2\"\r\n            >\r\n              <Box \r\n                align='center'\r\n                margin='20px'\r\n              >\r\n                <Button \r\n                  alignSelf='center'\r\n                  secondary\r\n                  size='medium'\r\n                  onClick={handleOpen}\r\n                  label='New Product'\r\n\r\n                />\r\n\r\n              </Box>\r\n              <ModalWindow open={newProductModalOpen} onClose={() => setNewProductModalOpen(false)} />\r\n              <SearchPanel \r\n                searchingParam={(filterParam) => {setSortByName(filterParam)}}\r\n                sortParam={(sortParam) => setByCount(sortParam)}\r\n              />\r\n              <Box\r\n                direction='row-responsive'\r\n                wrap={true}\r\n                justify='center'\r\n                margin='10px'\r\n                >\r\n                {displayProducts()}\r\n              </Box>\r\n            </Box>\r\n            \r\n          </Grid>\r\n        </Route>\r\n     </Switch>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default ProductsPage\r\n","import './App.css';\nimport ProductsPage from './pages/ProductsPage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProductsPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\r\nimport {reducer} from \"./reducers\";\r\n\r\nconst localStorageState = localStorage.getItem('reduxState') \r\nconst persistedState = localStorageState ? JSON.parse(localStorageState) : {products: []}\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tpersistedState,\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => {\r\n\tlocalStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n})\r\n\r\nexport default store;\r\n","export const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PRODUCT\":\r\n      return {\r\n        ...state,\r\n        products: [...state.products, action.payload]\r\n      }\r\n\r\n    case \"DELETE_PRODUCT\":{\r\n      const products = state.products;\r\n      const productId = action.payload\r\n      const newProductsList = products.filter((product) => product.id !== productId)\r\n      return {\r\n        ...state,\r\n        products: [...newProductsList]\r\n      }\r\n    }\r\n      \r\n    case 'EDIT_PRODUCT':{\r\n      const productIndex = state.products.findIndex((el) => el.id === action.payload.id);\r\n\r\n      return {\r\n        ...state,\r\n        products: [\r\n          ...state.products.slice(0, productIndex), \r\n          action.payload,\r\n          ...state.products.slice(productIndex + 1)\r\n        ]\r\n      }\r\n    }\r\n      \r\n      case \"ADD_COMMENT\":{\r\n        const productIndex = state.products.findIndex((el) => el.id === action.payload.productId);\r\n        const product = state.products[productIndex];\r\n\r\n        return {\r\n          ...state,\r\n          products: [\r\n            ...state.products.slice(0, productIndex), \r\n            {\r\n              ...product,\r\n               comments: [...product.comments, action.payload.comment]\r\n            },\r\n            ...state.products.slice(productIndex + 1)\r\n          ]\r\n        }\r\n      }\r\n        \r\n        case \"DELETE_COMMENT\":{\r\n          const productId = action.payload.productId;\r\n          const productIndex = state.products.findIndex((el) => el.id === productId);\r\n          const product = state.products[productIndex];\r\n\r\n          const productComments = product.comments;\r\n          const commentId = action.payload.commentId;\r\n\r\n          const newCommentList = productComments.filter((comment) => comment.id !== commentId);\r\n          \r\n         return {\r\n          ...state,\r\n          products: [\r\n            ...state.products.slice(0, productIndex), \r\n            {\r\n            ...product,\r\n             comments: newCommentList\r\n            },\r\n            ...state.products.slice(productIndex + 1)\r\n          ]      \r\n        }\r\n      }\r\n      \r\n    default:return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { Grommet } from 'grommet';\n\n\n\nconst theme = {\n  global: {\n    font: {\n      family: 'Roboto',\n      size: '14px',\n      height: '20px',\n    },\n  },\n};\n\nReactDOM.render(\n  <Grommet theme={theme}>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\n    <Provider store = {store}>\n    \n\n      <App />\n    </Provider>\n  </Grommet>\n    \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}